<?php

/**
 * Implements of hook_uninstall()
 */
function annotation_book_uninstall() {
	db_query("DELETE FROM {variable} WHERE name LIKE 'annotation_book_%'");
	cache_clear_all('variables', 'cache_bootstrap');	
}

/**
* Implements of hook_schema()
*/
function annotation_book_schema(){
	$schema['annotation'] = array(
		'fields' => array(
			'aid' => array(
				'type' => 'serial',
				'size' => 'big',
				'unsigned' => TRUE,
				'not null' => TRUE,
				'description' => 'Unique annotation id',
			),
			'uid' => array(
				'type' => 'int', 
				'size' => 'big',
				'unsigned' => TRUE, 
				'not null' => TRUE, 
				'default' => 0,
				'description' => 'user created'
			),
			'access' => array(
				'type' => 'int', 
				'size' => 'tiny',
				'unsigned' => TRUE, 
				'not null' => TRUE, 
				'default' => 0,
				'description' => 'public, private or friends'
			),
			 'timestamp' => array(
       		    'description' => 'The Unix timestamp at which the read occurred.',
      			'type' => 'int',
     		    'not null' => TRUE,
     		    'default' => 0,
    		  ),
			'body' => array(
				'type' => 'text',
				'not null' => TRUE,
				'description' => 'the userâ€™s comment about the excerpt of the book',
			),
			'attachment' => array(
				'description' => 'The resource attached to the annotation.',
		        'type' => 'blob',
		        'not null' => FALSE,
		        'size' => 'big',
		        'serialize' => TRUE,			
			),			
		),
		'primary key' => array('aid'),
	);

	$schema['annotation_link'] = array(
		'fields' => array(
			'aid' => array(
				'type' => 'int', // This is not auto-increment
				'size' => 'big',
				'unsigned' => TRUE,
				'not null' => TRUE,
				'description' => 'Unique annotation id',
			),
			'content' => array(
				'type' => 'text',
				'not null' => FALSE,
				'default' => NULL,
				'description' => 'The body of highlighted text',
			),
			'bid' => array(
				'type' => 'int', 
				'size' => 'big',
				'unsigned' => TRUE, 
				'not null' => TRUE, 
				'default' => 0,
				'description' => 'book id'
			),
			'pid' => array(
				'type' => 'int', 
				'size' => 'big',
				'unsigned' => TRUE, 
				'not null' => TRUE, 
				'default' => 0,
				'description' => 'page id within the book'
			),	
			'startx'=>array(
				'type'=>'varchar',
				'length'=>32,
        		'not null' => FALSE,
				'description'=>'starting position x of the annotation in current page'
			),
			'starty'=>array(
				'type'=>'varchar',
				'length'=>32,
        		'not null' => FALSE,
				'description'=>'starting position y of the annotation in current page'
			),
			'width'=>array(
				'type'=>'varchar',
				'length'=>32,
        		'not null' => FALSE,
				'description'=>'width of the annotation in current page'
			),
			'height'=>array(
				'type'=>'varchar',
				'length'=>32,
       			'not null' => FALSE,
				'description'=>'height of the annotation in current page'
			),
			'type'=>array(
				'type'=>'int',
				'size'=>'tiny',
				'unsigned'=>TRUE,
				'not null'=>TRUE,
				'default'=>0,
				'description'=>'type of the annotation'
			),
			'points'=>array(
				'type' => 'text',
				'not null' => FALSE,
				'default' => NULL,
				'description' => 'points of pencil annotation',
			)
		),
		'primary key' => array('aid', 'bid', 'pid'),
		'foreign keys' => array(
			'aid' => array(
        		'table' => 'annotation',
        		'columns' => array(
        			'aid' => 'aid'
				),		
			),
		),
	);


	$schema['annotation_comment'] = array(
		'fields' => array(
			'cid' => array(
				'type' => 'serial', 
				'size' => 'big',
				'unsigned' => TRUE, 
				'not null' => TRUE,
				'description' => 'page id within the book'
			),
			'aid' => array(
				'type' => 'int',
				'size' => 'big',
				'unsigned' => TRUE,
				'not null' => TRUE,
				'description' => 'Unique annotation id',
			),
			'uid' => array(
				'type' => 'int', 
				'size' => 'big',
				'unsigned' => TRUE, 
				'not null' => TRUE, 
				'default' => 0,
				'description' => 'user created'
			),
			'body' => array(
				'type' => 'text',
				'not null' => TRUE,
				'description' => 'the comment content',
			),
			'pid' => array(
				'type' => 'int', 
				'size' => 'big',
				'unsigned' => TRUE, 
				'not null' => TRUE, 
				'default' => 0,
				'description' => 'parent id'
			),			
		),
		'primary key' => array('cid'),
		'foreign keys' => array(
			'aid' => array(
        		'table' => 'annotation',
        		'columns' => array(
        			'aid' => 'aid'
				),		
			),
		),
	);


	return $schema;
}
