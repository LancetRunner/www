<?php
/**
 * @file
 * Install, update and uninstall functions for the minimal installation profile.
 */

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function annotation_install() {
  // Enable and set the default theme for the eBook Annotation
  theme_enable(array('ebookannotation'));
  variable_set('theme_default', 'ebookannotation');
  $default_theme = variable_get('theme_default', 'ebookannotation');
  
  // Enable some standard blocks.
  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'management',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 1,
      'region' => 'sidebar_second',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ), 
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

// Allow visitor account creation with administrative approval.
  if(module_exists('openid_signin')){    
  	variable_set('user_register', USER_REGISTER_VISITORS);
  	variable_set('user_email_verification', 0);
  	variable_set('user_mail_status_activated_notify', 0);
  } else{
	variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);
  }

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content overview', 'access content', 'access user profiles', 'change own username'));
  
  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');
  variable_set('user_picture_default', 'sites/all/themes/ebookannotation/default_user_300x300.png');
  
  // Set the site frontpage.
  if(module_exists('ebook')) {    
      variable_set('site_frontpage', 'home');
  }
  
// Set the search default page and disable the node content search.
  if(module_exists('search')) {    
      variable_set('search_active_modules', array('user'));
      variable_set('search_default_module', 'user');
      variable_set('menu_rebuild_needed', TRUE);
      user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('search content', 'use advanced search'));
  }
  
  variable_set('clean_url', 1);
  
  db_query("update field_config set translatable=1");
}
